/*
 * Copyright (C) 2015-2016 Daniel Schaal <daniel@schaal.email>
 *
 * This file is part of OCReader.
 *
 * OCReader is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * OCReader is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with OCReader.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'realm-android'
    id 'com.mikepenz.aboutlibraries.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    buildFeatures.dataBinding = true

    defaultConfig {
        applicationId "email.schaal.ocreader"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 56
        versionName "0.56"

        archivesBaseName = "${getApplicationId()}_${getVersionCode()}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

ext {
    versions = [
            okhttp     : '4.9.1',
            retrofit   : '2.9.0',
            glide      : '4.12.0',
            lifecycle  : '2.3.1',
            moshi      : '1.11.0',
            core       : '1.5.0',
            annotation : '1.2.0'
    ]
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'

    implementation "androidx.core:core-ktx:${versions.core}"
    implementation "androidx.core:core-ktx:${versions.core}"

    implementation "androidx.appcompat:appcompat:1.3.0"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"

    implementation "androidx.work:work-runtime-ktx:2.5.0"
    implementation "androidx.fragment:fragment-ktx:1.3.5"
    implementation "androidx.activity:activity-ktx:1.2.3"

    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.palette:palette-ktx:1.0.0"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "androidx.viewpager2:viewpager2:1.1.0-alpha01"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation "androidx.annotation:annotation:${versions.annotation}"
    kapt "androidx.annotation:annotation:${versions.annotation}"

    implementation 'com.google.android.material:material:1.3.0'

    implementation "com.mikepenz:aboutlibraries:$about_libraries_version"

    implementation 'org.jsoup:jsoup:1.13.1'

    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"

    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"

    implementation "com.squareup.moshi:moshi:${versions.moshi}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    implementation "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"
    implementation "com.github.bumptech.glide:recyclerview-integration:${versions.glide}"

    implementation 'com.github.zafarkhaja:java-semver:0.9.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"

    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'org.robolectric:robolectric:4.5.1'
    testImplementation 'junit:junit:4.13.2'
}
